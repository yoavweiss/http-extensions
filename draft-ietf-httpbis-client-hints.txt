



HTTP Working Group                                           I. Grigorik
Internet-Draft                                                    Google
Intended status: Experimental                           October 23, 2017
Expires: April 26, 2018


                           HTTP Client Hints
                 draft-ietf-httpbis-client-hints-latest

Abstract

   An increasing diversity of Web-connected devices and software
   capabilities has created a need to deliver optimized content for each
   device.

   This specification defines a set of HTTP request header fields,
   colloquially known as Client Hints, to address this.  They are
   intended to be used as input to proactive content negotiation; just
   as the Accept header field allows user agents to indicate what
   formats they prefer, Client Hints allow user agents to indicate
   device and agent specific preferences.

Note to Readers

   Discussion of this draft takes place on the HTTP working group
   mailing list (ietf-http-wg@w3.org), which is archived at
   https://lists.w3.org/Archives/Public/ietf-http-wg/ [1].

   Working Group information can be found at http://httpwg.github.io/
   [2]; source code and issues list for this draft can be found at
   https://github.com/httpwg/http-extensions/labels/client-hints [3].

Status of This Memo

   This Internet-Draft is submitted in full conformance with the
   provisions of BCP 78 and BCP 79.

   Internet-Drafts are working documents of the Internet Engineering
   Task Force (IETF).  Note that other groups may also distribute
   working documents as Internet-Drafts.  The list of current Internet-
   Drafts is at https://datatracker.ietf.org/drafts/current/.

   Internet-Drafts are draft documents valid for a maximum of six months
   and may be updated, replaced, or obsoleted by other documents at any
   time.  It is inappropriate to use Internet-Drafts as reference
   material or to cite them other than as "work in progress."

   This Internet-Draft will expire on April 26, 2018.



Grigorik                 Expires April 26, 2018                 [Page 1]

Internet-Draft              HTTP Client Hints               October 2017


Copyright Notice

   Copyright (c) 2017 IETF Trust and the persons identified as the
   document authors.  All rights reserved.

   This document is subject to BCP 78 and the IETF Trust's Legal
   Provisions Relating to IETF Documents
   (https://trustee.ietf.org/license-info) in effect on the date of
   publication of this document.  Please review these documents
   carefully, as they describe your rights and restrictions with respect
   to this document.  Code Components extracted from this document must
   include Simplified BSD License text as described in Section 4.e of
   the Trust Legal Provisions and are provided without warranty as
   described in the Simplified BSD License.

Table of Contents

   1.  Introduction  . . . . . . . . . . . . . . . . . . . . . . . .   3
     1.1.  Notational Conventions  . . . . . . . . . . . . . . . . .   4
   2.  Client Hint Request Header Fields . . . . . . . . . . . . . .   4
     2.1.  Sending Client Hints  . . . . . . . . . . . . . . . . . .   4
     2.2.  Server Processing of Client Hints . . . . . . . . . . . .   4
       2.2.1.  Advertising Support via Accept-CH Header Field  . . .   5
       2.2.2.  The Accept-CH-Lifetime Header Field . . . . . . . . .   5
       2.2.3.  Interaction with Caches . . . . . . . . . . . . . . .   6
   3.  Client Hints  . . . . . . . . . . . . . . . . . . . . . . . .   6
     3.1.  The DPR Header Field  . . . . . . . . . . . . . . . . . .   6
       3.1.1.  Confirming Selected DPR . . . . . . . . . . . . . . .   7
     3.2.  The Width Header Field  . . . . . . . . . . . . . . . . .   7
     3.3.  The Viewport-Width Header Field . . . . . . . . . . . . .   7
     3.4.  The Save-Data Header Field  . . . . . . . . . . . . . . .   8
   4.  Examples  . . . . . . . . . . . . . . . . . . . . . . . . . .   8
   5.  Security Considerations . . . . . . . . . . . . . . . . . . .   9
   6.  IANA Considerations . . . . . . . . . . . . . . . . . . . . .   9
     6.1.  Accept-CH . . . . . . . . . . . . . . . . . . . . . . . .  10
     6.2.  Accept-CH-Lifetime  . . . . . . . . . . . . . . . . . . .  10
     6.3.  Content-DPR . . . . . . . . . . . . . . . . . . . . . . .  10
     6.4.  DPR . . . . . . . . . . . . . . . . . . . . . . . . . . .  10
     6.5.  Save-Data . . . . . . . . . . . . . . . . . . . . . . . .  10
     6.6.  Viewport-Width  . . . . . . . . . . . . . . . . . . . . .  11
     6.7.  Width . . . . . . . . . . . . . . . . . . . . . . . . . .  11
   7.  Acknowledgements  . . . . . . . . . . . . . . . . . . . . . .  11
   8.  References  . . . . . . . . . . . . . . . . . . . . . . . . .  11
     8.1.  Normative References  . . . . . . . . . . . . . . . . . .  11
     8.2.  Informative References  . . . . . . . . . . . . . . . . .  12
     8.3.  URIs  . . . . . . . . . . . . . . . . . . . . . . . . . .  12
   Appendix A.  Interaction with Key Response Header Field . . . . .  13
   Appendix B.  Changes  . . . . . . . . . . . . . . . . . . . . . .  13



Grigorik                 Expires April 26, 2018                 [Page 2]

Internet-Draft              HTTP Client Hints               October 2017


     B.1.  Since -00 . . . . . . . . . . . . . . . . . . . . . . . .  13
     B.2.  Since -01 . . . . . . . . . . . . . . . . . . . . . . . .  13
     B.3.  Since -02 . . . . . . . . . . . . . . . . . . . . . . . .  13
     B.4.  Since -03 . . . . . . . . . . . . . . . . . . . . . . . .  13
     B.5.  Since -04 . . . . . . . . . . . . . . . . . . . . . . . .  14
     B.6.  Since -05 . . . . . . . . . . . . . . . . . . . . . . . .  14
   Author's Address  . . . . . . . . . . . . . . . . . . . . . . . .  14

1.  Introduction

   There are thousands of different devices accessing the web, each with
   different device capabilities and preference information.  These
   device capabilities include hardware and software characteristics, as
   well as dynamic user and client preferences.

   One way to infer some of these capabilities is through User-Agent
   (Section 5.5.3 of [RFC7231]) header field detection against an
   established database of client signatures.  However, this technique
   requires acquiring such a database, integrating it into the serving
   path, and keeping it up to date.  However, even once this
   infrastructure is deployed, user agent sniffing has numerous
   limitations:

   o  User agent detection cannot reliably identify all static variables
   o  User agent detection cannot infer any dynamic client preferences
   o  User agent detection requires an external device database
   o  User agent detection is not cache friendly

   A popular alternative strategy is to use HTTP cookies ([RFC6265]) to
   communicate some information about the user agent.  However, this
   approach is also not cache friendly, bound by same origin policy, and
   imposes additional client-side latency by requiring JavaScript
   execution to create and manage HTTP cookies.

   This document defines a set of new request header fields that allow
   user agent to perform proactive content negotiation (Section 3.4.1 of
   [RFC7231]) by indicating device and agent specific preferences,
   through a mechanism similar to the Accept header field which is used
   to indicate preferred response formats.

   Client Hints does not supersede or replace the User-Agent header
   field.  Existing device detection mechanisms can continue to use both
   mechanisms if necessary.  By advertising its capabilities within a
   request header field, Client Hints allows for cache friendly and
   proactive content negotiation.






Grigorik                 Expires April 26, 2018                 [Page 3]

Internet-Draft              HTTP Client Hints               October 2017


1.1.  Notational Conventions

   The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
   "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED", "MAY", and
   "OPTIONAL" in this document are to be interpreted as described in BCP
   14 [RFC2119] [RFC8174] when, and only when, they appear in all
   capitals, as shown here.

   This document uses the Augmented Backus-Naur Form (ABNF) notation of
   [RFC5234] with the list rule extension defined in [RFC7230],
   Appendix B.  It includes by reference the DIGIT rule from [RFC5234]
   and the OWS and field-name rules from [RFC7230].

2.  Client Hint Request Header Fields

   A Client Hint request header field is a HTTP header field that is
   used by HTTP clients to indicate configuration data that can be used
   by the server to select an appropriate response.  Each one conveys
   client preferences that the server can use to adapt and optimize the
   response.

2.1.  Sending Client Hints

   Clients control which Client Hints are sent in requests, based on
   their default settings, user configuration and/or preferences.
   Implementers might provide user choice mechanisms so that users may
   balance privacy concerns with bandwidth limitations.  Implementations
   specific to certain use cases or threat models might avoid
   transmitting these header fields altogether, or limit them to secure
   contexts or authenticated sessions.  Implementers should be aware
   that explaining the privacy implications of passive fingerprinting or
   network information disclosure may be challenging.

   The client and server, or an intermediate proxy, can use an opt-in
   mechanism to negotiate which fields should be reported to allow for
   efficient content adaption.

2.2.  Server Processing of Client Hints

   When presented with a request that contains one or more client hint
   header fields, servers can optimize the response based upon the
   information in them.  When doing so, and if the resource is
   cacheable, the server MUST also generate a Vary response header field
   (Section 7.1.4 of [RFC7231]) to indicate which hints can affect the
   selected response and whether the selected response is appropriate
   for a later request.





Grigorik                 Expires April 26, 2018                 [Page 4]

Internet-Draft              HTTP Client Hints               October 2017


   Further, depending on the hint used, the server can generate
   additional response header fields to convey related values to aid
   client processing.  For example, this specification defines the
   "Content-DPR" response header field that needs to be returned by the
   server when the "DPR" hint is used to select the response.

2.2.1.  Advertising Support via Accept-CH Header Field

   Servers can advertise support for Client Hints using the Accept-CH
   header field or an equivalent HTML meta element with http-equiv
   attribute ([HTML5]).

     Accept-CH = #field-name

   For example:

     Accept-CH: DPR, Width, Viewport-Width

   When a client receives Accept-CH, or if it is capable of processing
   the HTML response and finds an equivalent HTML meta element, it can
   treat it as a signal that the application is interested in receiving
   specified request header fields that match the advertised field-
   values; subresource requests initiated as a result of processing the
   response from the server that includes the Accept-CH opt-in can
   include the request header fields that match the advertised field-
   values.

   For example, based on Accept-CH example above, a user agent could
   append DPR, Width, and Viewport-Width header fields to all
   subresource requests initiated by the page constructed from the
   response.

2.2.2.  The Accept-CH-Lifetime Header Field

   Servers can ask the client to remember an origin-wide Accept-CH
   preference for a specified period of time to enable delivery of
   Client Hints on all subsequent requests to the origin ([RFC6454]),
   and on any requests initiated as a result of processing a response
   from the origin.

     Accept-CH-Lifetime = #delta-seconds

   The field-value indicates that the Accept-CH preference SHOULD be
   considered stale after its age is greater than the specified number
   of seconds.






Grigorik                 Expires April 26, 2018                 [Page 5]

Internet-Draft              HTTP Client Hints               October 2017


     Accept-CH: DPR, Width
     Accept-CH: Viewport-Width
     Accept-CH-Lifetime: 86400

   For example, based on the Accept-CH and Accept-CH-Lifetime example
   above, a user agent could persist an origin-wide Accept-CH preference
   for up to 86400 seconds (1 day).  Then, if a request is initiated to
   the same origin before the preference is stale (e.g. as a result of a
   navigation to the origin, or fetching a subresource from the origin)
   the client could append the requested header fields (DPR, Width, and
   Viewport-Width in this example) to the request and any subresource
   requests initiated as a result of processing a response from same
   origin.

   If Accept-CH-Lifetime occurs in a message more than once, the last
   value overrides all previous occurrences.

2.2.3.  Interaction with Caches

   When selecting an optimized response based on one or more Client
   Hints, and if the resource is cacheable, the server needs to generate
   a Vary response header field ([RFC7234]) to indicate which hints can
   affect the selected response and whether the selected response is
   appropriate for a later request.

     Vary: DPR

   Above example indicates that the cache key needs to include the DPR
   header field.

     Vary: DPR, Width

   Above example indicates that the cache key needs to include the DPR
   and Width header fields.

3.  Client Hints

3.1.  The DPR Header Field

   The "DPR" request header field is a number that indicates the
   client's current Device Pixel Ratio (DPR), which is the ratio of
   physical pixels over CSS px (Section 5.2 of [CSSVAL]) of the layout
   viewport (Section 9.1.1 of [CSS2]) on the device.

     DPR = 1*DIGIT [ "." 1*DIGIT ]

   If DPR occurs in a message more than once, the last value overrides
   all previous occurrences.



Grigorik                 Expires April 26, 2018                 [Page 6]

Internet-Draft              HTTP Client Hints               October 2017


3.1.1.  Confirming Selected DPR

   The "Content-DPR" response header field is a number that indicates
   the ratio between physical pixels over CSS px of the selected image
   response.

     Content-DPR = 1*DIGIT [ "." 1*DIGIT ]

   DPR ratio affects the calculation of intrinsic size of image
   resources on the client - i.e. typically, the client automatically
   scales the natural size of the image by the DPR ratio to derive its
   display dimensions.  As a result, the server MUST explicitly indicate
   the DPR of the selected image response whenever the DPR hint is used,
   and the client MUST use the DPR value returned by the server to
   perform its calculations.  In case the server returned Content-DPR
   value contradicts previous client-side DPR indication, the server
   returned value MUST take precedence.

   Note that DPR confirmation is only required for image responses, and
   the server does not need to confirm the resource width as this value
   can be derived from the resource itself once it is decoded by the
   client.

   If Content-DPR occurs in a message more than once, the last value
   overrides all previous occurrences.

3.2.  The Width Header Field

   The "Width" request header field is a number that indicates the
   desired resource width in physical px (i.e. intrinsic size of an
   image).  The provided physical px value is a number rounded to the
   smallest following integer (i.e. ceiling value).

     Width = 1*DIGIT

   If the desired resource width is not known at the time of the request
   or the resource does not have a display width, the Width header field
   can be omitted.  If Width occurs in a message more than once, the
   last value overrides all previous occurrences.

3.3.  The Viewport-Width Header Field

   The "Viewport-Width" request header field is a number that indicates
   the layout viewport width in CSS px.  The provided CSS px value is a
   number rounded to the smallest following integer (i.e. ceiling
   value).

     Viewport-Width = 1*DIGIT



Grigorik                 Expires April 26, 2018                 [Page 7]

Internet-Draft              HTTP Client Hints               October 2017


   If Viewport-Width occurs in a message more than once, the last value
   overrides all previous occurrences.

3.4.  The Save-Data Header Field

   The "Save-Data" request header field consists of one or more tokens
   that indicate client's preference for reduced data usage, due to high
   transfer costs, slow connection speeds, or other reasons.

     Save-Data = sd-token *( OWS ";" OWS [sd-token] )
     sd-token = token

   This document defines the "on" sd-token value, which is used as a
   signal indicating explicit user opt-in into a reduced data usage mode
   on the client, and when communicated to origins allows them to
   deliver alternate content honoring such preference - e.g. smaller
   image and video resources, alternate markup, and so on.  New token
   and extension token values can be defined by updates to this
   specification.

   If Save-Data occurs in a message more than once, the last value
   overrides all previous occurrences.

4.  Examples

   For example, given the following request header fields:

     DPR: 2.0
     Width: 320
     Viewport-Width: 320

   The server knows that the device pixel ratio is 2.0, that the
   intended display width of the requested resource is 160 CSS px (320
   physical pixels at 2x resolution), and that the viewport width is 320
   CSS px.

   If the server uses above hints to perform resource selection for an
   image asset, it must confirm its selection via the Content-DPR
   response header to allow the client to calculate the appropriate
   intrinsic size of the image response.  The server does not need to
   confirm resource width, only the ratio between physical pixels and
   CSS px of the selected image resource:

     Content-DPR: 1.0

   The Content-DPR response header field indicates to the client that
   the server has selected resource with DPR ratio of 1.0.  The client
   can use this information to perform additional processing on the



Grigorik                 Expires April 26, 2018                 [Page 8]

Internet-Draft              HTTP Client Hints               October 2017


   resource - for example, calculate the appropriate intrinsic size of
   the image resource such that it is displayed at the correct
   resolution.

5.  Security Considerations

   The request header fields defined in this specification expose
   information that is already available to Web applications in the
   browser runtime itself (e.g., using JavaScript and CSS).  For
   example, the application can obtain viewport width, image display
   width, and device pixel ratio via JavaScript, or through the use of
   CSS media queries and unique resource URLs even if JavaScript is
   disabled.  However, servers that gather this information through such
   mechanisms are typically observable (e.g., you can see that they're
   using JavaScript to gather it), whereas servers' use of the header
   fields introduced by this specification is not observable.
   Section 2.1 discusses potential mitigations.

   For example, sending Client Hints on all requests can make
   information about the user's environment available to origins that
   otherwise did not have access to this data, which may or may not be
   the desired outcome - e.g. this may enable an image optimization
   service to deliver a tailored asset, and it may reveal same
   information about the user to other origins that may not have had
   access to it before.  Similarly, sending highly granular data, such
   as image and viewport width may help identify users across multiple
   requests.  Restricting such field values to an enumerated range,
   where the user agent advertises a threshold value that is close but
   is not an exact representation of the current value, can help
   mitigate the risk of such fingerprinting.

   Implementers ought to provide mechanisms and policies to control how
   and when such hints are advertised.  For example, they could require
   origin opt-in via Accept-CH; clear remembered opt-in, as set by
   Accept-CH-Lifetime, when site data, browsing history, browsing cache,
   or similar, are cleared; restrict delivery to same origin
   subrequests; limit delivery to requests that already carry
   identifying information (e.g. cookies); modify delivery policy when
   in an "incognito" or a similar privacy mode; enable user
   configuration and opt in, and so on.

6.  IANA Considerations

   This document defines the "Accept-CH", "DPR", "Save-Data", "Viewport-
   Width", and "Width" HTTP request fields, "Accept-CH", "Accept-CH-
   Lifetime", and "Content-DPR" HTTP response field, and registers them
   in the Permanent Message Header Fields registry.




Grigorik                 Expires April 26, 2018                 [Page 9]

Internet-Draft              HTTP Client Hints               October 2017


6.1.  Accept-CH

   o  Header field name: Accept-CH
   o  Applicable protocol: HTTP
   o  Status: standard
   o  Author/Change controller: IETF
   o  Specification document(s): Section 2.2.1 of this document
   o  Related information: for Client Hints

6.2.  Accept-CH-Lifetime

   o  Header field name: Accept-CH-Lifetime
   o  Applicable protocol: HTTP
   o  Status: standard
   o  Author/Change controller: IETF
   o  Specification document(s): Section 2.2.2 of this document
   o  Related information: for Client Hints

6.3.  Content-DPR

   o  Header field name: Content-DPR
   o  Applicable protocol: HTTP
   o  Status: standard
   o  Author/Change controller: IETF
   o  Specification document(s): Section 3.1.1 of this document
   o  Related information: for Client Hints

6.4.  DPR

   o  Header field name: DPR
   o  Applicable protocol: HTTP
   o  Status: standard
   o  Author/Change controller: IETF
   o  Specification document(s): Section 3.1 of this document
   o  Related information: for Client Hints

6.5.  Save-Data

   o  Header field name: Save-Data
   o  Applicable protocol: HTTP
   o  Status: standard
   o  Author/Change controller: IETF
   o  Specification document(s): Section 3.4 of this document
   o  Related information: for Client Hints







Grigorik                 Expires April 26, 2018                [Page 10]

Internet-Draft              HTTP Client Hints               October 2017


6.6.  Viewport-Width

   o  Header field name: Viewport-Width
   o  Applicable protocol: HTTP
   o  Status: standard
   o  Author/Change controller: IETF
   o  Specification document(s): Section 3.3 of this document
   o  Related information: for Client Hints

6.7.  Width

   o  Header field name: Width
   o  Applicable protocol: HTTP
   o  Status: standard
   o  Author/Change controller: IETF
   o  Specification document(s): Section 3.2 of this document
   o  Related information: for Client Hints

7.  Acknowledgements

   Thanks to Mark Nottingham, Julian Reschke, Chris Bentzel, Yoav Weiss,
   Ben Greenstein, Tarun Bansal, Roy Fielding, Vasiliy Faronov, Ted
   Hardie, Jonas Sicking, and numerous other members of the IETF HTTP
   Working Group for invaluable help and feedback.

8.  References

8.1.  Normative References

   [CSS2]     Bos, B., Celic, T., Hickson, I., and H. Lie, "Cascading
              Style Sheets Level 2 Revision 1 (CSS 2.1) Specification",
              W3C Recommendation REC-CSS2-20110607, June 2011,
              <http://www.w3.org/TR/2011/REC-CSS2-20110607>.

   [CSSVAL]   Atkins, T. and E. Etemad, "CSS Values and Units Module
              Level 3", World Wide Web Consortium CR CR-css-values-
              3-20160929, September 2016,
              <https://www.w3.org/TR/2016/CR-css-values-3-20160929>.

   [HTML5]    Hickson, I., Berjon, R., Faulkner, S., Leithead, T.,
              Navara, E., O&#039;Connor, T., and S. Pfeiffer, "HTML5",
              World Wide Web Consortium Recommendation REC-
              html5-20141028, October 2014,
              <http://www.w3.org/TR/2014/REC-html5-20141028>.







Grigorik                 Expires April 26, 2018                [Page 11]

Internet-Draft              HTTP Client Hints               October 2017


   [RFC2119]  Bradner, S., "Key words for use in RFCs to Indicate
              Requirement Levels", BCP 14, RFC 2119,
              DOI 10.17487/RFC2119, March 1997,
              <https://www.rfc-editor.org/info/rfc2119>.

   [RFC5234]  Crocker, D., Ed. and P. Overell, "Augmented BNF for Syntax
              Specifications: ABNF", STD 68, RFC 5234,
              DOI 10.17487/RFC5234, January 2008,
              <https://www.rfc-editor.org/info/rfc5234>.

   [RFC6454]  Barth, A., "The Web Origin Concept", RFC 6454,
              DOI 10.17487/RFC6454, December 2011,
              <https://www.rfc-editor.org/info/rfc6454>.

   [RFC7230]  Fielding, R., Ed. and J. Reschke, Ed., "Hypertext Transfer
              Protocol (HTTP/1.1): Message Syntax and Routing",
              RFC 7230, DOI 10.17487/RFC7230, June 2014,
              <https://www.rfc-editor.org/info/rfc7230>.

   [RFC7231]  Fielding, R., Ed. and J. Reschke, Ed., "Hypertext Transfer
              Protocol (HTTP/1.1): Semantics and Content", RFC 7231,
              DOI 10.17487/RFC7231, June 2014,
              <https://www.rfc-editor.org/info/rfc7231>.

   [RFC7234]  Fielding, R., Ed., Nottingham, M., Ed., and J. Reschke,
              Ed., "Hypertext Transfer Protocol (HTTP/1.1): Caching",
              RFC 7234, DOI 10.17487/RFC7234, June 2014,
              <https://www.rfc-editor.org/info/rfc7234>.

8.2.  Informative References

   [KEY]      Fielding, R. and M. Nottingham, "The Key HTTP Response
              Header Field", draft-ietf-httpbis-key-01 (work in
              progress), March 2016.

   [RFC6265]  Barth, A., "HTTP State Management Mechanism", RFC 6265,
              DOI 10.17487/RFC6265, April 2011,
              <https://www.rfc-editor.org/info/rfc6265>.

8.3.  URIs

   [1] https://lists.w3.org/Archives/Public/ietf-http-wg/

   [2] http://httpwg.github.io/

   [3] https://github.com/httpwg/http-extensions/labels/client-hints





Grigorik                 Expires April 26, 2018                [Page 12]

Internet-Draft              HTTP Client Hints               October 2017


Appendix A.  Interaction with Key Response Header Field

   Client Hints may be combined with Key response header field ([KEY])
   to enable fine-grained control of the cache key for improved cache
   efficiency.  For example, the server can return the following set of
   instructions:

     Key: DPR;partition=1.5:2.5:4.0

   Above example indicates that the cache key needs to include the value
   of the DPR header field with three segments: less than 1.5, 1.5 to
   less than 2.5, and 4.0 or greater.

     Key: Width;div=320

   Above example indicates that the cache key needs to include the value
   of the Width header field and be partitioned into groups of 320:
   0-320, 320-640, and so on.

Appendix B.  Changes

B.1.  Since -00

   o  Issue 168 (make Save-Data extensible) updated ABNF.
   o  Issue 163 (CH review feedback) editorial feedback from httpwg
      list.
   o  Issue 153 (NetInfo API citation) added normative reference.

B.2.  Since -01

   o  Issue 200: Moved Key reference to informative.
   o  Issue 215: Extended passive fingerprinting and mitigation
      considerations.
   o  Changed document status to experimental.

B.3.  Since -02

   o  Issue 239: Updated reference to CR-css-values-3
   o  Issue 240: Updated reference for Network Information API
   o  Issue 241: Consistency in IANA considerations
   o  Issue 250: Clarified Accept-CH

B.4.  Since -03

   o  Issue 284: Extended guidance for Accept-CH
   o  Issue 308: Editorial cleanup
   o  Issue 306: Define Accept-CH-Lifetime




Grigorik                 Expires April 26, 2018                [Page 13]

Internet-Draft              HTTP Client Hints               October 2017


B.5.  Since -04

   o  Issue 361: Removed Downlink
   o  Issue 361: Moved Key to appendix, plus other editorial feedback.

B.6.  Since -05

   o  None

Author's Address

   Ilya Grigorik
   Google

   Email: ilya@igvita.com
   URI:   https://www.igvita.com/



































Grigorik                 Expires April 26, 2018                [Page 14]
